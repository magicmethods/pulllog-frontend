export default defineI18nLocale(async () => ({
    // Globals
    app: {
        name: 'PullLog',
        slogan: 'Drawn Fate, Let\'s Keep It',
        tagline: 'Manage Your Gacha History and Analyze Statistics',
        description: 'PullLog is a tool for managing gacha history and performing statistical analysis.',
        keywords: 'gacha, history management, statistical analysis, PullLog',
        loading: 'Now Loading...',
        loggingIn: 'Now logging in...',
        back: 'Back',
        backToHome: 'Back to Home',
        scrollToTop: 'Scroll to Top',
        termsTitle: 'PullLog Terms of Service',
        termsLabel: 'Terms of Service',
        error: {
            errorOccurred: 'An error occurred.',
            notFound: 'Page not found.',
            sorrySomethingWentWrong: 'Sorry, something went wrong.',
            unknownUser: 'Logged-in user is unknown.',
            userUpdateFailed: 'Failed to update user profile.',
            saveFailed: 'Failed to save.',
            deleteFailed: 'Failed to delete.',
            noLogin: 'You are not logged in.',
            logsNotFound: 'No history data found.',
            importFailed: 'Failed to import history.',
            statsNotFound: 'No statistics data found.',
        },
        ad: {
            advertisement: 'Advertisement',
        },
    },
    // Common Options
    options: {
        currency: {
            jpy: 'Japanese Yen',
            jpyDesc: 'JPY - Yen',
            usd: 'US Dollar',
            usdDesc: 'USD - Dollar',
            eur: 'Euro',
            eurDesc: 'EUR - Euro',
            cny: 'Chinese Yuan',
            cnyDesc: 'CNY - Yuan',
        },
        rarity: {
            ssr: 'SSR',
            sr: 'SR',
            fiveStars: '‚≠ê5',
            threeStars: '‚≠ê3',
        },
        symbol: {
            pickup: 'üèÜPickup',
            lose: 'üíîLose 50/50',
            target: 'üéØTarget',
            guaranteed: 'üíñGuaranteed',
        },
        language: {
            ja: 'Japanese',
            en: 'English',
            zh: 'Simplified Chinese',
        },
        theme: {
            light: 'üîÜ Light',
            dark: 'üåô Dark',
        },
        homepage: {
            apps: 'Apps',
            history: 'History',
            stats: 'Statistics',
        },
        rangeSeparator: '-',
    },
    // Auth
    auth: {
        login: {
            pageName: 'Login',
            google: 'Login with Google',
            apple: 'Login with Apple',
            microsoft: 'Login with Microsoft',
            twitter: 'Login with X', // X is deprecated
            facebook: 'Login with Facebook', // Facebook is deprecated
            github: 'Login with GitHub',
            prompt: 'Please enter your login information',
            emailPlaceholder: 'Enter your email',
            passwordPlaceholder: 'Enter your password',
            rememberMe: 'Remember me',
            loading: 'Logging in...',
            submit: 'Login',
            or: 'or',
            hasAccount: 'Already have an account?',
            hasAccountSuffix: 'now.',
            // Error Messages
            invalidResponse: 'Invalid login response',
            accountNotAvailable: 'This account is not available',
            error: 'An error occurred during login',
            failed: 'Login failed. Please check your email and password.',
        },
        register: {
            pageName: 'Register',
            noAccount: 'Don\'t have an account?',
            noAccountSuffix: 'now.',
            success: 'Account registration completed successfully.',
            confirmationEmailSent: 'A confirmation email has been sent to the registered email address. Please click the link in the email to activate your account.',
            prompt: 'Register a new account.',
            instruction: 'Please enter the following information.',
            namePlaceholder: 'Enter your name (display name)',
            emailPlaceholder: 'Enter your email',
            passwordPlaceholder: 'Enter your password',
            passwordPrompt: 'Checking password strength',
            weakLabel: 'Too easy',
            mediumLabel: 'Average complexity',
            strongLabel: 'Complex password',
            passwordFooter: 'Password must be at least 8 characters long',
            agreeTextPrefix: 'I agree to the',
            agreeTextMiddle: 'and',
            agreeTextSuffix: '.',
            submit: 'Register',
            // Error Messages
            invalidResponse: 'Invalid registration response',
            error: 'An error occurred during registration',
            failed: 'Registration failed. Please check your input.',
        },
        passwordReset: {
            pageName: 'Password Reset',
            shortName: 'Reset here',
            forgotPassword: 'Forgot your password?',
            forgotPasswordSuffix: 'now.',
            success: 'Password reset email sent successfully.',
            confirmationEmailSent: 'A password reset email has been sent to the registered email address. Please click the link in the email to reset your password.',
            forgotPasswordTitle: 'Forgot Password',
            prompt: 'Please enter your registered email address.',
            instructions: 'We will send you instructions to reset your password.',
            emailPlaceholder: 'Enter your email address',
            submit: 'Send',
            // Error Messages
            error: 'An error occurred during password reset.',
            failed: 'Password reset failed. Please check your email address.',
        },
        verify: {
            title: 'Account Verification',
            signupSuccess: 'Your account has been activated successfully.',
            resetSuccess: 'Your password has been reset successfully.',
            promptPrefix: 'Please',
            promptSuffix: 'now.',
            resetPrompt: 'You are about to reset your password.',
            inputPromptPrefix: 'Please enter the',
            code: 'Verification Code',
            inputPromptSuffix: 'provided in the email sent to you.',
            newPasswordPrompt: 'Please enter your new password.',
            verifying: 'Verifying...',
            submit: 'Submit',
            loading: 'Loading...',
            // Error messages
            error: 'An error occurred during verification.',
            passwordResetFailed: 'Password reset failed.',
            unknownError: 'An unknown error occurred.',
            invalidAccess: 'Invalid access.',
            failed: 'Verification failed.',
        },
        updatePassword: {
            error: 'An error occurred during password update.',
        },
    },
    // Validation Messages
    validation: {
        invalidEmail: 'Please enter a valid email address',
        shortPassword: 'Password must be at least 8 characters long',
        nameRequired: 'Please enter your name (display name)',
        nameMaxLength: 'Name must be within 50 characters',
        emailInvalid: 'Please enter a valid email address',
        termsRequired: 'You must agree to the terms of service and privacy policy',
        invalidCode: 'Invalid verification code',
        languageRequired: 'Please select a language',
        themeRequired: 'Please select a theme',
        homePageRequired: 'Please select a homepage',
        appNameRequired: 'Application name is required',
        appNameLengthExceeded: 'Application name must be within {maxLength} characters',
        invalidURL: 'Invalid URL. Please enter a valid URL',
        textLengthExceeded: 'Input must be within {maxLength} characters',
        invalidTime: 'Invalid time',
        guaranteeCountMin: 'Guarantee count must be a positive integer',
        selectedAppEmpty: 'Please select an application',
        invalidDate: 'Invalid date',
    },
    // Settings Drawer
    settingsDrawer: {
        header: 'Settings',
        title: 'Settings',
        loading: 'Loading...',
        loggingOut: 'Logging out...',
        unset: 'Unset',
        lastLogin: 'Last Login',
        language: 'Language',
        languagePlaceholder: 'Select Language',
        theme: 'Theme',
        themePlaceholder: 'Select Theme',
        homepage: 'Homepage',
        homepagePlaceholder: 'Select Homepage',
        others: 'Other Settings',
        plan: 'Plan',
        planPlaceholder: 'Choose Plan',
        change: 'Change',
        mdTemplateTitle: 'Markdown Style Template',
        privacyPolicyTitle: 'PullLog Privacy Policy',
        showDocument: 'Show Document',
        privacyPolicy: 'Privacy Policy',
        editProfile: 'Edit Profile',
        logout: 'Logout'
    },
    // Apps Page
    apps: {
        header: 'Apps Management',
        description1: 'Currently registered apps are',
        description2: 'items. You can register up to',
        description3: 'items.',
        addApp: 'Add App',
        addNew: 'Register New App',
        noDescription: 'No app description available',
        noHistory: 'No history data available',
        siteLink: 'Related Site',
        registerHistory: 'Register History',
        // Menu
        menu: {
            settings: 'App Settings',
            edit: 'Edit',
            export: 'Export',
            import: 'Import',
            delete: 'Delete',
        },
        // Loading
        loading: {
            apps: 'Loading applications...',
            stats: 'Loading statistics...',
            saving: 'Loading data...',
            deleting: 'Loading data...',
            downloading: 'Loading history...',
            uploading: 'Loading history...',
        },
        // Toast Notifications
        notice: {
            infoTitle: 'Information',
            infoDetail: 'Process completed successfully.',
            saveTitle: 'Save Application',
            saveDetail: 'Saved {name}.',
            saveErrorTitle: 'Save Error',
            saveErrorDetail: 'Failed to save application.',
            deleteTitle: 'Delete Application',
            deleteDetail: 'Deleted {name}.',
            deleteErrorTitle: 'Delete Error',
            deleteErrorDetail: 'Failed to delete application.',
            downloadTitle: 'Download History',
            downloadDetail: 'Downloaded history for {name}.',
            downloadErrorTitle: 'Download Error',
            downloadErrorDetail: 'Failed to download history.',
            importTitle: 'Import History',
            importDetail: 'Updated history for {name}.',
            importErrorTitle: 'Import Error',
            importErrorDetail: 'Failed to import history.',
        }
    },
    // History Page
    history: {
        header: 'History Registration',
        targetDate: 'Target Date',
        targetDateChange: 'Change',
        currentTargetDate: 'Current Target Date',
        register: 'Register History',
        totalPullCount: 'Total Pull Count',
        totalPullCountPlaceholder: 'Total Pull Count',
        highestRarityCount: 'Highest Rarity Count',
        highestRarityCountPlaceholder: 'Highest Rarity Count',
        droppedItemsRecord: 'Dropped Items Record (Optional)',
        expense: 'Expense (Optional)',
        expensePlaceholder: 'Expense',
        tags: 'Tags (Optional)',
        tagsPlaceholder: 'Add Tags (Up to {maxTags})',
        activity: 'Activity (Optional)',
        activityPlaceholder: 'Activity Status (Up to {maxLength} characters)',
        inputCharacterCount: 'Input Character Count',
        resetInput: 'Reset Input',
        saveLog: 'Save Log',
        loadingLogData: 'Loading log data for the target date...',
        historyTrend: 'History Trend (Recent)',
        latestHistoryList: 'Latest History List',
        loading: {
            logs: 'Loading history data...',
            saving: 'Saving history data...',
            deleting: 'Deleting history data...',
        },
        notice: {
            noLogData: 'No log data available',
            noLogDataDetail: 'No history registered for this date',
            saveFailed: 'Failed to save history. Please try again.',
            saveFailedTitle: 'History Save Failed',
            saveSuccess: 'History Save Successful',
            saveSuccessDetail: 'App: {appName} / Target Date: {date}',
        },
        historyChart: {
            month1: '1 Mo.',
            month3: '3 Mos.',
            month6: '6 Mos.',
            month12: '12 Mos.',
            selectApp: 'Select Application',
            noData: 'No Data Available',
            expense: 'Expense ({currency})',
            other: 'Other Discharges',
            rare: 'Highest Rarity Discharges',
            pityLine: '{count} Pity',
            pulls: 'Pulls',
            date: 'Date',
        },
        historyStats: {
            targetApp: 'Target Application',
            label: 'History Stats for {appName}',
            loading: 'Loading history stats...',
            period: 'Aggregation Period',
            registeredDays: 'Number of Registered Days (Months)',
            days: 'Days',
            months: 'Months',
            totalPulls: 'Total Pulls',
            totalExpense: 'Total Expense',
            rareDropCount: 'Rare Drop Count',
            rareDropRate: 'Rare Drop Rate',
            percent: '%',
            averageMonthlyExpense: 'Average Monthly Expense',
            averageRareDropRate: 'Average Rare Drop Rate',
            noData: 'No data available',
        },
        historyList: {
            date: 'Date',
            totalPulls: 'Pulls',
            dischargeItems: 'Rare',
            expense: 'Expense',
            tags: 'Tags',
            activity: 'Activity',
            empty: 'No history available',
            loading: 'Loading history...',
            copyToClipboard: 'Copy to Clipboard',
            copyToClipboardSuccess: 'Copied selected text to clipboard.',
        },
    },
    // Stats Page
    stats: {
        header: 'Statistics',
        targetApps: 'Target Applications',
        noRegisteredApps: 'No registered applications',
        allAppsSelected: 'All applications selected',
        maxSelectionReached: 'Maximum selection limit reached',
        appsSelected: '{count} applications selected',
        aggregating: 'Aggregating...',
        aggregationPeriod: 'Period',
        allPeriod: 'All Period',
        specifyDate: 'Specify Date',
        startDate: 'Start Date',
        endDate: 'End Date',
        startAggregation: 'Aggregate',
        advancedSettings: 'Advanced Settings',
        noAggregationResults: 'No aggregation results available',
        chart: {
            expenseRatio: {
                noData: 'No Data Available',
                expenseLabel: 'Expense',
                ratioLabel: 'Ratio',
                totalLabel: 'Total',
                currencyNote: 'note: The currency unit for expenses will be unified to the first selected app.',
            },
            monthlyExpenseStack: {
                titlePrefix: 'Applications',
                titleLabel: 'Monthly Spending',
                titleSuffix: '',
                average: 'Average: {value}',
            },
            cumulativeRareRate: {
                titleLabel: 'Cumulative Rare Rate',
                subtitle: 'ÔºàLuck TrendÔºâ',
                average: 'Average: {value}%',
            },
            appPullStats: {
                title: 'Pull Counts & Rare Rates',
                totalPulls: 'Total Pulls',
                rareDrops: 'Rare Drops',
                rareRate: 'ÔºàRare Rate: {value}%Ôºâ',
            },
            rareDropBreakdown: {
                titlePrefix: '{name}',
                titleLabel: 'Rare Drops',
                titleSuffix: 'Breakdown Ratio',
                pickup: 'Pickup',
                lose: 'Lose the 50/50',
                target: 'Target',
                guaranteed: 'Guaranteed',
                other: 'Other',
                value: '{value} ({rate}%)',
                total: 'Total Rare Drops',
                notice: 'note: The breakdown is only valid for the initial marker definitions in the app settings.',
            },
            rareDropRanking: {
                title: '{appName} Rare Drop Ranking',
                rarity: 'Rarity',
                itemName: 'Item Name',
                count: 'Count',
                totalCount: 'Total Count',
                pickup: 'Pickup',
                lose: 'Lose the 50/50',
                target: 'Target',
                guaranteed: 'Guaranteed',
                other: 'Other',
                note: 'note: The breakdown of ranking is only valid for the initial marker definitions in the app settings.',
            },
        },
        loading: {
            stats: 'Loading statistics data...',
        },
    },
    // Settings Page
    settings: {
        header: 'Account Information',
        displayName: 'Display Name',
        displayNamePlaceholder: 'Enter display name',
        email: 'Email Address',
        emailCannotBeChanged: 'Email address cannot be changed',
        newPassword: 'New Password',
        newPasswordPlaceholder: 'Enter new password',
        passwordChangeInfoPrefix: 'Please enter a new password',
        passwordChangeInfoEmphasis: 'only if you need',
        passwordChangeInfoSuffix: 'to change your password.',
        avatar: 'Avatar',
        language: 'Language',
        languagePlaceholder: 'Select Language',
        theme: 'Theme',
        themePlaceholder: 'Select Theme',
        homepage: 'Homepage',
        homepagePlaceholder: 'Select Homepage',
        others: 'Other Settings',
        withdrawal: 'Withdrawal',
        accountDelete: 'Delete Account',
        cancel: 'Cancel',
        saveChanges: 'Save Changes',
        saving: 'Saving...',
        fileUpload: {
            invalidFileSize: '{file}: The file size exceeds the limit of {size}.',// primevue: ': Invalid file size, file size should be smaller than {1.}'
            invalidFileLimit: 'Maximum number of files to be uploaded is {limit}.',// primevue: 'Maximum number of files to be uploaded is {0.}'
            invalidFileType: '{file}: Invalid file type.',// primevue: '{0}: Invalid file type.'
            chooseLabel: 'Choose File',
            uploadLabel: 'Upload',
            cancelLabel: 'Cancel',
            dragAndDrop: 'Drag and drop files to here to upload.',
            fileSizeLimit: '{size}MB or less',
            fileSizeLimitSuffix: 'file can be uploaded.',
        },
        withdrawalModal: {
            accountDeleteConfirmTitle: 'Account Deletion Confirmation',
            accountDeleteWarning: 'Deleting your account will permanently remove all data.',
            accountDeleteIrreversible: 'This action cannot be undone. Are you sure?',
            confirmDelete: 'Delete',
            deleting: 'Deleting...',
            userDeleteFailed: 'Failed to delete user',
        },
        notice: {
            inputErrorTitle: 'Input Error',
            inputErrorDetail: 'There is an error in the input. Please check each item.',
            saveSuccessTitle: 'Save Success',
            saveSuccessDetail: 'Successfully saved account information.',
            saveErrorTitle: 'Save Error',
            saveErrorDetail: 'Failed to save account information.',
            fileSizeErrorTitle: 'File Size Error',
            fileSizeError: 'Please upload an avatar file of {size}MB or less.',
        },
    },
    // Modals
    modal: {
        appEdit: {
            header: 'Application {mode}',
            edit: 'Edit Settings',
            register: 'Add New',
            basicInfo: 'Basic Information',
            basicInfoDescription: 'Set the registration details for the application handled by PullLog.',
            appName: 'Application Name',
            appUrl: 'Website URL (optional)',
            appUrlPlaceholder: 'URL of the official site, etc.',
            appDescription: 'Application Description (optional)',
            appDescriptionPlaceholder: 'Description of the application, etc. (up to {maxLength} characters)',
            inputCharacterCount: 'Input Character Count',
            currencyUnit: 'Currency Unit',
            currencyUnitPlaceholder: 'Select Currency Unit',
            currencyUnitEmptyMessage: 'You can add more',
            appImage: 'Application Image (optional)',
            appImagePlaceholder: 'Select Application Image',
            dateUpdateTime: 'Date Update Time in Application',
            dateUpdateTimeSync: 'Sync Date Update Time with Log Registration Date',
            pitySystem: 'Rare Drop Guarantee (Pity) System',
            pitySystemLabel: 'System',
            pitySystemEnabled: 'Enabled',
            pitySystemDisabled: 'Disabled',
            guaranteeCountPlaceholder: 'Guarantee Count',
            loggingSettings: 'Logging Settings',
            loggingSettingsDescription: 'Define the application-specific settings and any markers to be used during logging in PullLog.',
            rarityDefinitions: 'Rarity Definitions (optional)',
            rarityDefinitionsPlaceholder: 'SR, ‚òÖ5, etc.',
            markerDefinitions: 'Marker Definitions (optional)',
            markerDefinitionsPlaceholder: 'Pickup, Lose 50/50, etc.',
            cancel: 'Cancel',
            save: 'Save',
        },
        logConfirm: {
            header: 'Log Confirmation',
            confirmText: 'Do you want to register the history with the following details?',
            appName: 'Application Name',
            targetDate: 'Target Date',
            totalPullCount: 'Total Pull Count',
            highestRarityCount: 'Highest Rarity Count',
            droppedItemsRecord: 'Dropped Items Record',
            expense: 'Expense',
            tags: 'Tags',
            activity: 'Activity',
            save: 'Save',
            cancel: 'Cancel',
            dismiss: 'Dismiss',
            validationErrorMessage: 'There are errors in the input. Please correct them.',
            saveSuccessMessage: 'History has been successfully saved.',
            noDataMessage: 'There is no data to register.',
        },
        calculator: {
            title: 'Spending Calculator',
            commitAdd: 'Add',
            commitOverwrite: 'Overwrite',
            cancel: 'Cancel',
            dismiss: 'Close',
        },
        deleteConfirm: {
            header: 'Delete Application',
            confirmTextPrefix: 'Are you sure you want to delete the application',
            confirmTextSuffix: '?',
            noAppName: '(No Selection)',
            confirmNotice: 'This action cannot be undone. Are you sure?',
            dangerNotice: 'Warning: All data associated with this application will be deleted.',
            cancel: 'Cancel',
            delete: 'Delete',
        },
        export: {
            header: 'Export',
            promptPrefix: 'Application',
            promptSuffix: 'history will be downloaded.',
            selectPeriod: 'Select Period',
            allTime: 'All Time',
            dateRange: 'Specify Date',
            startDate: 'Start Date',
            endDate: 'End Date',
            dateRangeInvalid: 'Start date and end date are not specified correctly',
            fileFormat: 'File Format',
            json: 'JSON',
            csv: 'CSV',
            cancel: 'Cancel',
            download: 'Download',
        },
        import: {
            header: 'Import',
            promptPrefix: 'Application',
            promptSuffix: 'history will be uploaded.',
            importMode: 'Import Mode',
            overwrite: 'Overwrite',
            merge: 'Merge',
            overwriteDescription: 'Existing history will be deleted and overwritten with the uploaded history.',
            mergeDescription: 'Uploaded history will be added, and only overlapping data with existing history will be overwritten.',
            fileSizeInformation: '<b>{size}MB or less</b> in <b>{format1}</b> or <b>{format2}</b> format file can be uploaded.',
            cancel: 'Cancel',
            upload: 'Upload',
        },
        document: {
            loading: 'Loading document...',
            error: 'Failed to retrieve document.',
            close: 'Close',
        },
    },
    // Components
    component: {
        tooltip: {
            appName: 'Application name can be freely set to a name that is easy for you to manage. <span class="tooltip-warning">‚ÄªApplication name is required</span>',
            appUrl: 'You can set related websites such as official sites and strategy sites. The icon image will be automatically retrieved from the specified URL.',
            appDesc: 'You can freely enter a description of the application (up to {maxLength} characters).',
            appImage: 'You can set any image you like as the image for this application. This image will take precedence over the icon image automatically retrieved from the specified URL.',
            currencyUnit: 'Specify the currency unit to be used when charging the target application. For example, if in-game charges are made in Japanese yen, select "JPY".',
            dateUpdateTime: 'This is the time when the date switches in the target application. Generally, crossing this time will recalculate the login date. <br>The set time can be synchronized with the update time of the target date at the time of log registration in PullLog.',
            pitySystem: 'A pity system is a mechanism that guarantees a rare item drop after a certain number of attempts. You can specify whether this system is implemented and the number of attempts required to trigger it. <br>The configured details will be displayed as auxiliary lines in statistical graphs such as the trend of gacha attempts.',
            rarityDefs: 'This is a list of rarity definitions used within the application. It serves as the initial list of rarity options for the drop list. <br>While you can add to this list when registering the drop list, it will not be updated in that case. <br>It is recommended to set this definition list for persistent use.',
            markerDefs: 'This is a list of marker definitions for optionally marking during log recording of the PullLog drop list. It serves as the initial marker list for the drop list marking options. <br>While you can add to this list when registering the drop list, it will not be updated in that case. <br>It is recommended to set this definition list for persistent use.',
        },
        selectApps: {
            targetApps: 'Target Applications',
            edit: 'Edit',
            add: 'Add',
            addPlaceholder: 'Please add an app',
            selectPlaceholder: 'Please select an app',
            emptyMessage: 'No apps registered',
            dataMismatch: 'Data mismatch',
            appNotFound: 'Selected app not found in the list',
            maxAppsReached: 'Maximum number of registered apps reached',
            maxAppsReachedDetail: 'You can add up to {max} apps.',
            savingChanges: 'Applying changes...',
            saveApp: 'Save Application',
            saveAppDetail: '{name} has been saved.',
            saveError: 'Save Error',
            saveErrorDetail: 'Failed to save the app.',
        },
        pullItemDetail: {
            rarity: 'Rarity',
            rarityPlaceholder: 'Select / Input',
            rarityEmptyMessage: 'You can add more',
            dropItemName: 'Character / Item Name',
            dropItemNamePlaceholder: 'Enter the name of the dropped rarity',
            marker: 'Marker',
            markerPlaceholder: 'Select / Input',
            markerEmptyMessage: 'You can add more',
        },
        inputOptions: {
            helpText: 'New definition values will be added to the end of the list.',
            maxItems: 'A maximum of {count} definition values can be set.',
            maxLength: 'Each definition value can be up to {count} characters long.',
            emptyMessage: 'No defined values have been set.',
        },
        inputTags: {
            maxTags: 'You can add up to {count} tags',
            addTag: 'Add Tag',
        },
        orderList: {
            emptyMessage: 'No items available',
        },
        comboBox: {
            placeholder: 'Select or Input',
            emptyMessage: 'No options found',
            remove: 'Remove',
        },
    },
    // CalendarUI (Primevue DatePicker)
    calendar: {
        today: 'Today',
        clear: 'Clear',
        sunday: 'Sunday',
        monday: 'Monday',
        tuesday: 'Tuesday',
        wednesday: 'Wednesday',
        thursday: 'Thursday',
        friday: 'Friday',
        saturday: 'Saturday',
        january: 'January',
        february: 'February',
        march: 'March',
        april: 'April',
        may: 'May',
        june: 'June',
        july: 'July',
        august: 'August',
        september: 'September',
        october: 'October',
        november: 'November',
        december: 'December',
        short: {
            sun: 'Sun',
            mon: 'Mon',
            tue: 'Tue',
            wed: 'Wed',
            thu: 'Thu',
            fri: 'Fri',
            sat: 'Sat',
            jan: 'Jan',
            feb: 'Feb',
            mar: 'Mar',
            apr: 'Apr',
            may: 'May',
            jun: 'Jun',
            jul: 'Jul',
            aug: 'Aug',
            sep: 'Sep',
            oct: 'Oct',
            nov: 'Nov',
            dec: 'Dec',
        },
        min: {
            sun: 'Su.',
            mon: 'Mo.',
            tue: 'Tu.',
            wed: 'We.',
            thu: 'Th.',
            fri: 'Fr.',
            sat: 'Sa.',
            jan: '1',
            feb: '2',
            mar: '3',
            apr: '4',
            may: '5',
            jun: '6',
            jul: '7',
            aug: '8',
            sep: '9',
            oct: '10',
            nov: '11',
            dec: '12',
        },
        weekHeader: 'Week',
        chooseYear: 'Choose Year',
        chooseMonth: 'Choose Month',
        chooseDate: 'Choose Date',
        prevDecade: 'Previous Decade',
        nextDecade: 'Next Decade',
        prevYear: 'Previous Year',
        nextYear: 'Next Year',
        prevMonth: 'Previous Month',
        nextMonth: 'Next Month',
    },
    // Landing Page
    landing: {
        hero: {
            getStarted: 'Get Started Now',
            tryDemo: 'Try Demo',
            alert: 'Open Beta Testing Now',
        },
        about: {
            title: 'What is PullLog?',
            description: 'PullLog is a tool for managing and analyzing your gacha history.',
            features: 'Features',
            feature1: 'Easy Gacha History Management',
            feature1Desc: 'Effortlessly manage your gacha pulls and history with our intuitive interface.',
            feature2: 'Detailed Statistics and Analysis',
            feature2Desc: 'Gain insights into your gacha performance with detailed statistics and analysis tools.',
            feature3: 'User-Friendly Interface',
            feature3Desc: 'Enjoy a user-friendly interface designed for easy navigation and management.',
            feature4: 'Multi-Platform Support',
            feature4Desc: 'Access PullLog from any device, whether it‚Äôs a desktop, tablet, or smartphone.',
            feature5: 'Free to Use',
            feature5Desc: 'Enjoy PullLog\'s great features for free.',
        },
        gallery: {
            title: 'History and statistics at a glance',
            description: 'Explore the features and interface of PullLog through our gallery.',
            image1Caption: 'Your Application Management',
            image2Caption: 'Detailed Pull History',
            image3Caption: 'Comprehensive Statistics',
            note: 'Note: The images shown are for illustrative purposes and may differ from the actual application.',
        },
        steps: {
            title: 'How to Use PullLog',
            step1: {
                title: '1. Launch PullLog after drawing a gacha',
                description: 'Log in to PullLog from your browser.',
            },
            step2: {
                title: '2. Record Your Gacha History',
                description: 'You can easily record how to draw gacha and your history with just a few clicks.',
            },
            step3: {
                title: '3. Automatically Reflect in History & Statistics',
                description: 'Aggregated data and graphs are automatically generated and can be viewed at any time.',
            },
        },
        footer: {
            contactUs: 'Contact Us',
            contactDesc: 'If you have any questions, concerns, or issues regarding the service, please contact support@pulllog.net and provide your registered email address.',
            privacyPolicy: 'Privacy Policy',
            termsOfService: 'Terms of Service',
            github: 'GitHub',
            blog: 'Blog',
            followUs: 'Follow Us',
        },
    },
    // Cookie Consent
    cookieConsent: {
        title: 'Cookie Consent',
        description: 'This site uses cookies to analyze and improve user experience.',
        learnMorePrefix: 'Learn more in',
        privacyPolicy: 'Privacy Policy',
        learnMoreSuffix: '.',
        decline: 'Decline All',
        manage: 'Manage Settings',
        acceptAll: 'Accept All',
        privacyPolicyTitle: 'PullLog Privacy Policy',
        detailsHeader: 'Cookie Details',
        requiredCookies: 'Required Cookies',
        requiredCookiesDesc: 'Cookies that are essential for the basic functionality of the site. Opting out is not possible.',
        analytics: 'Analytics (e.g., Google Analytics)',
        analyticsDesc: 'Used to understand and improve site usage.',
        ads: 'Ads (e.g., Remarketing)',
        adsDesc: 'Used for delivering and measuring relevant ads.',
        noticePrefix: 'For more details on cookie usage, please see',
        noticeSuffix: '.',
        saveSelection: 'Save Selection',
    },
}))
